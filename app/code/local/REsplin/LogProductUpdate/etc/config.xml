<?xml version="1.0" encoding="UTF-8"?>

<!-- The root node for Magento module configuration -->
<config>

	<!--
		The module's node contains basic
		information about each Magento module
	-->
	<modules>

		<!--
			This must exactly match the namespace and module's folder
			names, with directory separators replaced by underscores
		-->
		<REsplin_LogProductUpdate>

			<!-- The version of our module, starting at 0.0.1 -->
			<version>0.0.1</version>

		</REsplin_LogProductUpdate>

	</modules>

	<!-- Configure our module's behavior in the global scope -->
	<global>

		<!-- Defining models -->
		<models>

			<!--
				Unique identifier in the model's node.
				By convention, we put the module's name in lowercase.
			-->
			<resplin_logproductupdate>

				<!--
					The path to our models directory, with directory
					separators replaced by underscores
				-->
				<class>REsplin_LogProductUpdate_Model</class>

			</resplin_logproductupdate>

		</models>    

		<!-- Defining a helper -->
		<helpers>
			<REsplin_LogProductUpdate>
				<class>REsplin_LogProductUpdate_Helper</class>
			</REsplin_LogProductUpdate>
		</helpers>
		
		<!-- Defining an event observer -->
		<events>

			<!-- The code of the event we want to observe -->
			<catalog_product_save_after>

				<!-- Defining an observer for this event -->
				<observers>

					<!--
						Unique identifier within the
						catalog_product_save_after node.
						By convention, we write the module's
						name in lowercase.
					-->
					<resplin_logproductupdate>

						<!-- The model to be instantiated -->
						<class>resplin_logproductupdate/observer</class>

						<!-- The method of the class to be called -->
						<method>catalogProductSaveAfter</method>

						<!-- The type of class to instantiate -->
						<type>singleton</type>

					</resplin_logproductupdate>

				</observers>

			</catalog_product_save_after>

			<catalog_product_save_before>

				<observers>

					<resplin_logproductupdate>

						<class>resplin_logproductupdate/observer</class>

						<method>catalogProductSaveBefore</method>

						<type>singleton</type>

					</resplin_logproductupdate>

				</observers>

			</catalog_product_save_before>

			<catalog_product_load_after>

				<observers>

					<resplin_logproductupdate>

						<class>resplin_logproductupdate/observer</class>

						<method>catalogProductLoadAfter</method>

						<type>singleton</type>

					</resplin_logproductupdate>
				
				</observers>

			</catalog_product_load_after>

			<catalog_product_collection_load_after>
			
				<observers>
				
					<resplin_logproductupdate>

						<class>resplin_logproductupdate/observer</class>

						<method>catalogProductCollectionLoadAfter</method>

						<type>singleton</type>

					</resplin_logproductupdate>
				
				</observers>
			
			</catalog_product_collection_load_after>
			
			<adminhtml_customer_save_after>
			
				<observers>
				
					<resplin_logproductupdate>
					
						<class>resplin_logproductupdate/observer</class>
						
						<method>customerSaveAfter</method>
						
						<type>singleton</type>
					
					</resplin_logproductupdate>
				
				</observers>
			
			</adminhtml_customer_save_after>
			
			<adminhtml_customer_prepare_save>

				<observers>
			
					<resplin_logproductupdate>
					
						<class>resplin_logproductupdate/observer</class>
						
						<method>customerPrepareSave</method>
						
						<type>singleton</type>
					
					</resplin_logproductupdate>
				
				</observers>
			
			</adminhtml_customer_prepare_save>

			<controller_action_postdispatch>

				<observers>

					<resplin_logproductupdate>

						<class>resplin_logproductupdate/observer</class>

						<method>controllerActionPostDispatch</method>

					</resplin_logproductupdate>

				</observers>

			</controller_action_postdispatch>
			
		</events>

	</global>

</config>
